{
  "openapi": "3.0.0",
  "info": {
    "title": "Woofs API Documentation",
    "version": "1.0.0",
    "description": "This is a REST API application made with Express.",
    "license": {
      "name": "MIT",
      "url": "https://spdx.org/licenses/MIT.html"
    }
  },
  "paths": {
    "/user/create": {
      "post": {
        "summary": "Register a new User.",
        "description": "Register a new User.",
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "summary": "Get an user.",
        "description": "Get an user by it's id.",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The id of the user to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get a list of users.",
        "description": "Get a paginated list of users.",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "required": true
          },
          {
            "name": "_limit",
            "in": "query",
            "required": true,
            "description": "The id of the user to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    {
                      "type": "object"
                    }
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "404": {
        "description": "Not Found Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Not Found Error"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 1
          },
          "itemsPerPage": {
            "type": "number",
            "example": 10
          },
          "totalItems": {
            "type": "number",
            "example": 100
          },
          "totalPages": {
            "type": "number",
            "example": 10
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Bad Request"
          }
        }
      },
      "UserInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Leanne Graham"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "example": 123456
          },
          "cpf": {
            "type": "string",
            "example": 8684930070
          },
          "phone": {
            "type": "string",
            "example": 79999999999
          },
          "latitude": {
            "type": "float",
            "example": -10.43875
          },
          "longitude": {
            "type": "float",
            "example": -10.43875
          },
          "distanceLimit": {
            "type": "integer",
            "example": 50
          }
        }
      },
      "User": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UserInput"
          },
          {
            "type": "object"
          }
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "tags": []
}